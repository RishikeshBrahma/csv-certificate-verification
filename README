Certificate Verification System 📜
This is a formal and straightforward Flask-based web application designed to manage and verify digital certificates efficiently. It enables users to upload CSV files with certificate details, generate QR codes for verification, and download associated CSV files by scanning QR codes or using manual links, all presented in a clean, responsive interface. 🚀✨ Overview 🌟 The Certificate Verification System provides a reliable platform for uploading certificate data, generating unique QR codes, and verifying certificates through a user-friendly web interface. Certificate details are securely stored in a MySQL database, ensuring data integrity and accessibility. 🔒 Prerequisites 🛠️

Python 3.8+ 🐍 MySQL Server 🗄️ Git 🌳 A web browser (e.g., Chrome, Firefox) 🌐

Installation 🔧

Clone the Repository 🌐 git clone https://github.com/your-username/certificate-verification-system.git cd certificate-verification-system

Set Up a Virtual Environment 🛠️ python -m venv venv

On Windows: venv\Scripts\activate On macOS/Linux: source venv/bin/activate

Install Dependencies 📦 pip install flask mysql-connector-python pandas qrcode pillow python-dotenv

Configure MySQL Database 🗄️

Create the database:CREATE DATABASE certificates_db;

Create the certificates table:USE certificates_db; CREATE TABLE certificates ( certificate_id VARCHAR(50) PRIMARY KEY, recipient_name VARCHAR(100), course_title VARCHAR(100), issue_date DATE, verification_url VARCHAR(255), csv_file_path VARCHAR(255) );

Set Up Environment Variables 🔧

Create a .env file in the project root:MYSQL_USER=your_username MYSQL_PASSWORD=your_password MYSQL_HOST=localhost MYSQL_DB=certificates_db

Replace your_username and your_password with your MySQL credentials.

Create Directory Structure 📂

Ensure these directories exist: uploads static/qrcodes

On Windows, set permissions (if needed):icacls "uploads" /grant Everyone:F icacls "static/qrcodes" /grant Everyone:F

Run the Application 🚀 python app.py

Access at http://localhost:5001 or your server’s IP (e.g., http://192.168.29.236:5001). 🌐

Usage 🎯

Upload CSV 📤

Visit http://localhost:5001/upload. Upload a CSV file with columns: certificate_id, recipient_name, course_title, issue_date. Example:certificate_id,recipient_name,course_title,issue_date CERT123,John Doe,Python Programming,2025-07-07 CERT456,Jane Smith,Data Science,2025-07-08

Verify Certificate ✅

Go to http://localhost:5001/verify. Enter a certificate ID (e.g., CERT123) and generate the QR code. Scan the QR code with a mobile device to download the CSV or use the manual download link. 📱

Project Structure 🗂️ certificate-verification/ ├── app.py # Main Flask application 🐍 ├── .env # Environment variables 🔧 (not tracked) ├── templates/ # HTML templates 📄 │ ├── base.html # Base template │ ├── upload.html # Upload page │ ├── verify.html # Verification page ├── static/ # Static assets 🌐 │ ├── qrcodes/ # Generated QR codes 📷 │ └── uploads/ # Uploaded CSV files 📥 ├── venv/ # Virtual environment 🛠️ └── README.md # Project documentation 📜

Troubleshooting ⚠️

Ensure your device is on the same network as the server for QR code scanning. 📶 Verify MySQL credentials and database setup. 🛠️ Check directory permissions if files are not saving. 🔐

Contributing 🌱

Fork the repository. 🍴 Create a feature branch: git checkout -b feature/your-feature. 🌿 Commit changes: git commit -m "Add your feature". 📝 Push to the branch: git push origin feature/your-feature. 🚀 Submit a pull request. 📬

Contact 📧 For support or innovative suggestions, please open an issue on GitHub or email 📧 rishikeshbrahma78@gmail.com.

About
No description, website, or topics provided.
Resources
 Readme
 Activity
Stars
 0 stars
Watchers
 0 watching
Forks
 0 forks
Releases
No releases published
Create a new release
Packages
No packages published
Publish your first package
Footer
© 2025 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
D
